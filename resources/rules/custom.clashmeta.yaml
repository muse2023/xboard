port: 7890
socks-port: 7891
allow-lan: true
mode: Rule
log-level: info
external-controller: 127.0.0.1:9090
unified-delay: true

clash-for-android:
    append-system-dns: false    

sniffer:
    enable: true
    force-dns-mapping: true
    parse-pure-ip: true
    override-destination: true
    sniff: { TLS: { ports: [443, 8443] }, HTTP: { ports: [80, 8080-8880], override-destination: true } }
    force-domain: [+.netflix.com]
    skip-domain: ['Mijia Cloud']

profile:
    store-selected: false
    store-fake-ip: true    

dns:
    enable: true
    ipv6: false
    listen: '127.0.0.1:5334'
    default-nameserver: [180.184.1.1, 119.29.29.29, 223.5.5.5]
    enhanced-mode: fake-ip
    fake-ip-range: 198.18.0.1/16
    use-hosts: true
    nameserver-policy: { +.pphimalayanrt.com: 223.5.5.5, st.dl.eccdnx.com: 223.5.5.5, +.tmall.com: 223.5.5.5, +.taobao.com: 223.5.5.5, +.alicdn.com: 223.5.5.5, +.aliyun.com: 223.5.5.5, +.alipay.com: 223.5.5.5, +.alibaba.com: 223.5.5.5, +.qq.com: 119.29.29.29, +.tencent.com: 119.29.29.29, +.weixin.com: 119.29.29.29, +.qpic.cn: 119.29.29.29, +.jd.com: 119.29.29.29, +.bilibili.com: 119.29.29.29, +.hdslb.com: 119.29.29.29, +.163.com: 119.29.29.29, +.126.com: 119.29.29.29, +.126.net: 119.29.29.29, +.127.net: 119.29.29.29, +.netease.com: 119.29.29.29, +.baidu.com: 223.5.5.5, +.bdstatic.com: 223.5.5.5, +.bilivideo.+: 119.29.29.29, +.iqiyi.com: 119.29.29.29, +.douyinvod.com: 180.184.1.1, +.douyin.com: 180.184.1.1, +.douyincdn.com: 180.184.1.1, +.douyinpic.com: 180.184.1.1, +.feishu.cn: 180.184.1.1 }
    nameserver: ['https://dns.alidns.com/dns-query', 'https://doh.pub/dns-query', 'tls://223.5.5.5:853']
    fallback: ['https://101.101.101.101/dns-query', 'https://doh.apad.pro/dns-query', 'https://208.67.220.220/dns-query']
    fallback-filter: { geoip: true, ipcidr: [240.0.0.0/4, 0.0.0.0/32, 223.75.236.241/32, 182.43.124.6/32, 106.74.25.198/32, 183.192.65.101/32], domain: [+.google.cn, +.youtu0.com, +.youtunice.com, +.youtu6.shop, +.youtu7.shop, +.youtu8.shop, +.youtulink3.top, +.youtulink4.top, +.jsdelivr.net, +.proton.me] }

proxies:

proxy-groups:
    - { name: "🥢 选择节点", type: select, proxies: ["🇭🇰 香港|Auto","🇨🇳 台湾|Auto","🇸🇬 新加坡|Auto","🇯🇵 日本|Auto","🇺🇸 美国|Auto","♻️ Auto"] }
    - { name: "♻️ Auto", type: fallback, proxies: [], url: "http://www.gstatic.com/generate_204", interval: 300 }
    - { name: "🎥 NETFLIX", type: select, proxies: ["🥢 选择节点"]}
    - { name: "🎥 DisneyP", type: select, proxies: ["🥢 选择节点"]}
    - { name: "📺 BiliBili", type: select, proxies: ["DIRECT","🥢 选择节点"]} 
    - { name: "🎮 Game", type: select, proxies: ["DIRECT","🥢 选择节点"]}
    - { name: "🌈 Google", type: select, proxies: ["🥢 选择节点"]}     
    - { name: "📲 电报消息", type: select, proxies: ["🥢 选择节点","DIRECT"]}
    - { name: "Ⓜ️ 微软服务", type: select, proxies: ["DIRECT","🥢 选择节点"]}    
    - { name: "🍎 苹果服务", type: select, proxies: ["DIRECT","🥢 选择节点"]}
    - { name: "🌏 国外网站", type: select, proxies: ["🥢 选择节点" ,"DIRECT"]}
    - { name: "🎯 国内网站", type: select, proxies: ["DIRECT","🥢 选择节点"]}
    - { name: "🐟 漏网之鱼", type: select, proxies: ["🥢 选择节点" ,"DIRECT"]}  
    - { name: "🇭🇰 香港|Auto", type: fallback, proxies: [/香港/], url: 'http://www.gstatic.com/generate_204', interval: 300 }    
    - { name: "🇨🇳 台湾|Auto", type: fallback, proxies: [/台湾/], url: 'http://www.gstatic.com/generate_204', interval: 300 }
    - { name: "🇸🇬 新加坡|Auto", type: fallback, proxies: [/新加坡/], url: 'http://www.gstatic.com/generate_204', interval: 300 }
    - { name: "🇯🇵 日本|Auto", type: fallback, proxies: [/日本/], url: 'http://www.gstatic.com/generate_204', interval: 300 }   
    - { name: "🇺🇸 美国|Auto", type: fallback, proxies: [/美国/], url: 'http://www.gstatic.com/generate_204', interval: 300 }

rule-providers:
    Direct: { type: http, behavior: classical, url: 'https://ruleset-1319987019.cos.ap-chongqing.myqcloud.com/Bigme_Direct.yaml', interval: 259200, path: ./ruleset/Bigme_Direct.yaml }
    SteamCN: { type: http, behavior: classical, url: 'https://ruleset-1319987019.cos.ap-chongqing.myqcloud.com/SteamCN.yaml', interval: 259200, path: ./ruleset/SteamCN.yaml }
    Proxy: { type: http, behavior: classical, url: 'https://ruleset-1319987019.cos.ap-chongqing.myqcloud.com/Bigme_Proxy.yaml', interval: 259200, path: ./ruleset/Bigme_Proxy.yaml }
    OpenAI: { type: http, behavior: classical, url: 'https://ruleset-1319987019.cos.ap-chongqing.myqcloud.com/OpenAI.yaml', interval: 259200, path: ./ruleset/OpenAI.yaml }    
    Netflix: { type: http, behavior: classical, url: 'https://ruleset-1319987019.cos.ap-chongqing.myqcloud.com/Netflix_Classical.yaml', interval: 259200, path: ./ruleset/Netflix.yaml }
    Disney: { type: http, behavior: classical, url: 'https://ruleset-1319987019.cos.ap-chongqing.myqcloud.com/Disney.yaml', interval: 259200, path: ./ruleset/Disney.yaml }
    BiliBili: { type: http, behavior: classical, url: 'https://ruleset-1319987019.cos.ap-chongqing.myqcloud.com/BiliBili.yaml', interval: 259200, path: ./ruleset/BiliBili.yaml }
    Game: { type: http, behavior: classical, url: 'https://ruleset-1319987019.cos.ap-chongqing.myqcloud.com/Game.yaml', interval: 259200, path: ./ruleset/Game.yaml }
    Google: { type: http, behavior: classical, url: 'https://ruleset-1319987019.cos.ap-chongqing.myqcloud.com/Google_No_Resolve.yaml', interval: 259200, path: ./ruleset/Google.yaml }
    YouTube: { type: http, behavior: classical, url: 'https://ruleset-1319987019.cos.ap-chongqing.myqcloud.com/YouTube.yaml', interval: 259200, path: ./ruleset/YouTube.yaml }     
    Telegram: { type: http, behavior: classical, url: 'https://ruleset-1319987019.cos.ap-chongqing.myqcloud.com/Telegram.yaml', interval: 259200, path: ./ruleset/Telegram.yaml }
    Microsoft: { type: http, behavior: classical, url: 'https://ruleset-1319987019.cos.ap-chongqing.myqcloud.com/Microsoft.yaml', interval: 259200, path: ./ruleset/Microsoft.yaml }
    Apple: { type: http, behavior: classical, url: 'https://ruleset-1319987019.cos.ap-chongqing.myqcloud.com/Apple_Classical.yaml', interval: 259200, path: ./ruleset/Apple.yaml }
    GlobalMedia: { type: http, behavior: classical, url: 'https://ruleset-1319987019.cos.ap-chongqing.myqcloud.com/GlobalMedia_Classical_No_Resolve.yaml', interval: 259200, path: ./ruleset/GlobalMedia.yaml }

rules:
    # 自定义规则
    ##必须直连的
    - RULE-SET,Direct,🎯 国内网站,no-resolve
    - RULE-SET,SteamCN,🎯 国内网站          
    ##必须代理的
    - RULE-SET,Proxy,🥢 选择节点
    - RULE-SET,OpenAI,🥢 选择节点    
    - RULE-SET,Netflix,🎥 NETFLIX
    - RULE-SET,Disney,🎥 DisneyP
    - RULE-SET,BiliBili,📺 BiliBili  
    - RULE-SET,Game,🎮 Game
    - RULE-SET,Google,🌈 Google,no-resolve         
    - RULE-SET,YouTube,🌈 Google      
    - RULE-SET,Telegram,📲 电报消息
    - RULE-SET,Microsoft,Ⓜ️ 微软服务           
    - RULE-SET,Apple,🍎 苹果服务
    - RULE-SET,GlobalMedia,🌏 国外网站,no-resolve    
    - GEOIP,CN,🎯 国内网站
    - MATCH,🐟 漏网之鱼